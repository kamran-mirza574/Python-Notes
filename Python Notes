{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOW/Iox8Autb+B+lBnBAH+h"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"TFzeA0EUoDWT"},"outputs":[],"source":["'''\n","More on 2D lists\n","Dictionaries\n","Tuples\n","'''\n","\n","# Populating a 2D list\n","\n","def populate(outer_length):\n","    inner_list = []\n","    outer_list = []\n","\n","\n","    for i in range(outer_length):\n","        # print(outer_list)\n","        inner_length = int(input(f\"Please enter the length for inner list {i+1}: \"))\n","        inner_list = []\n","        for j in range(inner_length):\n","            num = int(input(f\"Please enter number {j+1} of inner list {i+1}: \"))\n","            inner_list.append(num)\n","\n","        # print(\"Inner list: \", inner_list)\n","        outer_list.append(inner_list)\n","        # print(\"Outer list: \", outer_list)\n","        # inner_list.clear()\n","\n","    return outer_list\n","\n","# outer_length = int(input(\"Please enter the length of outer list: \"))\n","\n","# print(populate(outer_length))\n","\n","\n","# dictionary is used in real life to get the meaning of a word\n","# so essentially every word has a corresponding meaning\n","# let's assume that the words are keys and they are used to get the value which is the meaning\n","\n","my_dict = {\"kamran\": 13, \"zammad\": 20, \"ronaldo\": 39}\n","print(my_dict)\n","\n","# to access a value using the corresponding key, i will use this syntax -> dictionaryName[key]\n","print(my_dict[\"kamran\"])\n","\n","# if you enter a key that does not exist you will get a key error\n","\n","\n","dict1 = {\"kamran\": 13, \"zammad\": 20, \"ronaldo\": 39, \"zammad\": 21, \"zammad\": 22, \"zammad\": 23, \"zammad\": 24}\n","print(dict1)\n","\n","# if I have a duplicate key in the list, it essentially updates the value of the original key\n","# the last key value will be the one stored\n","\n","my_dict[\"kamran\"] += 1\n","print(my_dict)\n","\n","# how to get all keys of my dictionary\n","my_keys = my_dict.keys()\n","print(my_keys)\n","\n","my_values = my_dict.values()\n","print(my_values)\n","\n","print(\"ron\" in my_dict)\n","\n","# delete a key value pair\n","del my_dict[\"ronaldo\"]\n","print(my_dict)\n","\n","def iter_dict(dict1):\n","    for key in dict1:\n","        print(\"Key: \", key, end = \"\\t\")\n","        print(\"Value: \", dict1[key])\n","\n","def iter_dict1(dict1):\n","    for key, value in dict1.items():\n","        print(\"Key: \", key, end = \"\\t\")\n","        print(\"Value: \", value)\n","\n","print(\"METHOD 1\")\n","iter_dict(my_dict)\n","print(\"METHOD 2\")\n","iter_dict1(my_dict)\n","\n","# use a for loop to populate a dictionary\n","\n","def pop_dict(length):\n","    my_dict = {}\n","    for i in range(length):\n","        key = input(f\"Please enter key for element {i+1}: \" )\n","        value = input(f\"Please enter value for the key {key}: \" )\n","        my_dict[key] = value\n","\n","    return my_dict\n","\n","\n","\n","\n","\n","\n","# mylen = int(input(\"Please enter the length of the dictionary: \"))\n","# print(pop_dict(mylen))\n","\n","\n","\n","# tuples\n","\n","my_tuple = (1,2,3,4,5)\n","\n","print(my_tuple[-2])\n","\n","# packing tuples\n","\n","packed_tuple = 1,2,3\n","a,b,c = packed_tuple\n","print(a, \" \", b, \" \", c)\n","\n","all_ones = (1,1,1,1,1,1)\n","\n","print(all_ones.count(1))\n","print(all_ones.index(1))\n","\n","for item in my_tuple:\n","    print(item)\n","\n","\n","'''\n","Problem 1: Dictionary Manipulation\n","Write a Python program to perform the following tasks:\n","\n","Create an empty dictionary called student_scores.\n","Prompt the user to enter the names of three students and their corresponding scores.\n","Store the student names as keys and their scores as values in the student_scores dictionary.\n","Print out the name and score of each student in the dictionary.\n","\n","Problem 2: Tuple Operations\n","Write a Python program to do the following:\n","\n","Create a tuple called dimensions that contains the dimensions of a rectangle in the format (length, width).\n","Calculate and print the area of the rectangle.\n","Prompt the user to enter new dimensions for the rectangle.\n","Update the dimensions tuple with the new values provided by the user.\n","Calculate and print the area of the rectangle with the updated dimensions.\n","\n","Problem 3: Dictionary and Tuple Combination\n","Write a Python program to perform the following tasks:\n","\n","Create a dictionary called inventory with items as keys and their quantities as values.\n","Create a tuple called new_items that contains items and quantities to be added to the inventory in the format [(item1, quantity1), (item2, quantity2), ...].\n","Update the inventory dictionary to include the new items and quantities from the new_items tuple.\n","Print out the updated inventory.\n","\n","Problem 4: Dictionary Filtering\n","Write a Python program to filter a dictionary based on a given condition:\n","\n","Create a dictionary called scores with student names as keys and their scores as values.\n","Prompt the user to enter a threshold score.\n","Create a new dictionary called passed_students that includes only the students whose scores are equal to or greater than the threshold score entered by the user.\n","Print out the names and scores of the students who passed.\n","'''\n","\n","\n","\n","\n","\n","\n","\n","\n","user_dict = {}\n","\n","num_entries = int(input(\"Enter the number of entries you want to add: \"))\n","\n","for i in range(num_entries):\n","\tkey = input(\"Enter key: \")\n","\tvalue = input(\"Enter value: \")\n","\tuser_dict[key] = value\n","\n","print(\"Dictionary:\", user_dict)\n"]},{"cell_type":"code","source":["'''\n","Conditional statements - If, Elif, Else\n","'''\n","\n","# What are conditional statements?\n","# They are only executed if conditions are true\n","\n","number = int(input(\"Please enter your age\"))\n","\n","if number >= 18:\n","    print(\"Wow you are an adult\")\n","\n","\n","\n","else:\n","    print(\"You still got time.\")\n","\n","\n","# we must have at least 1 if statement\n","#an else statement cant run on its own\n","# an elif statement is used when we have 2+ conditions\n","# we can have unlimited elif statements\n","# only one of the elif and else conditions runs\n","# order is important\n","\n","\n","\n","\n","\n","name = input(\"Please enter your favorite fruit: \")\n","\n","if name == \"mango\":\n","    print(\"A very sweet fruit\")\n","\n","elif name == \"apple\":\n","    print(\"A strange choice.\")\n","\n","else:\n","    print(\"good choice.\")\n","\n","\n","# how can i convert a string to lowercase only\n","str1 = \"JDJKASHJKHDKJSH\"\n","str1 = str1.lower()\n","print(\"Lowercase string: \", str1)\n","\n","\n","# str1 commands are: uppercase, lowercase, capitalize, title, swapcase(swaps cap and low)\n","'''\n","Develop a program that asks the user and prints whether it is a leap year or not\n","- num % 4 == 0\n","2. Takes number as input and prints wether it is psotive, negative or zero\n","\n","3. titled paragraph\n","\n","'''"],"metadata":{"id":"tKdzVFNEq-Rw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","'''\n","FOR LOOPS - whuy we need them, syntax, usage\n","ARRAYS/LISTS\n","'''\n","\n","# a loop runs repeatedly for a specified amount of time\n","# it saves you from the trouble of doing things again and again\n","\n","#if i want to run loop specified amount of times, i will use this\n","# USING THIS, VARIABLE I STARTS at i and increases by 1 for every range\n","for i in range(100):\n","    print(i)\n","\n","\n","# this is the syntax fir custom start and stop values for i\n","# the first paremeter is start and second is stop, stop value stops at one less than what is entered.\n","\n","for i in range(0, 10):\n","    print(i)\n","\n","\n","# if i8 want to skip numbers in between, use this syntax\n","#the first two parameters are same as above\n","#the third is the increments\n","#USE NEGATIVE VALUE FOR STEP TO MAKE DESCENDING ORDER\n","for i in range(1,10,3):\n","    print(i)\n","\n","\n","for i in range(100,1,-1):\n","    print(i)\n","\n","# a list is seperated by commas and enclosed in brackets\n","my_list = [1, 2, 3, 4 ,5, 20]\n","print(\"My list is:\", my_list)\n","print(\"its data type is: \", type(my_list))\n","\n","#to use for loops with list we use this syntax\n","\n","for number in my_list:\n","    print(number, end = \" \")\n","    if number == 20:\n","        print(\"number is in list\")\\\n","\n","\n","string_list = [\"a\", \"b\", \"c\"]\n","\n","for letter in string_list:\n","    print(letter, end = \" \")\n","\n","\n","new_list = (1,3,5,7,9,0)\n","\n","#the list indexes are the positions in the list\n","#first index starts from 0\n","# and the last index hence is one less length\n","index = 4\n","\n","print(f\"the value of the list at index {index} is {new_list[index]}\")\n","\n","\n","'''\n","hw\n","1. ask user for start and end number and print out alll values in that range\n","2. asks user for number between 1-10 and prints out the nuimbers in range 0-100 that are divisible by the nuimber\n","\n","\n","'''"],"metadata":{"id":"VHMTZMM-q-99"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["mylist = [1,2,3,4]\n","\n","#This is a function that allows you to enter something to the end of the list\n","mylist.append(5)\n","\n","print(\"List after appending:\", mylist)\n","\n","#let us try to make our own list by taking input from the user\n","userlist = []\n","\n","for i in range(10):\n","    listItem = int(input(\"Please enter the number you want to append into the list:\"))\n","    userlist.append(listItem)\n","print(\"user list is:\", userlist)\n","\n","firstlist = [1, 2, 3]\n","second = [4,5,6]\n","\n","#merging two lists using extend command\n","firstlist.extend(second)\n","print(\"lists after merging\", firstlist)\n","\n","\n","# ADDING A VALUE AT A PARTIOCUALR INDEX\n","alist = [1,2,3,4,5]\n","alist.insert(2, \"hello\")\n","print(\"list post insert:\", alist)\n","\n","\n","#viewing a value at an index in the list\n","llist = [2,2,2,4,4,2,2,4,4,2,]\n","number = 4\n","print(f\"Index of {number} in list:\", llist.index(number))\n","\n","#the pop command to remove an element from list\n","plist = [4, 4,3,2,4,2,4,2,4,5,7,4,]\n","popped_number = plist.pop()\n","print(\"Number that is popped:\", popped_number)\n","print(\"remaining list:\", plist)\n","RLIST = [\"a\", \"b\", \"c\", \"c\", \"c\"]\n","RLIST.remove(\"c\")\n","print(\"list after removing: \", RLIST)\n","\n","for i in range(4):\n","    if \"c\" in RLIST:\n","        RLIST.remove(\"c\")\n","    else:\n","        print(\"no more r's left, lsit is\", RLIST)\n","        break\n","\n","\n","\n","reverselist = [1,2,3,4,5]\n","reverselist.reverse()\n","print(\"reversed list:\", reverselist)\n","\n","sortlist = [12,32,3,2,32,42,32131,232143,21321,34124,321,431,231]\n","sortlist.sort()\n","print(\"Sorted list:\", sortlist)\n","\n","list1 = [\"b\", \"a\", \"c\"]\n","list1.sort()\n","print(\"list: \", list1)\n","\n","list1.clear()\n","print(\"cleared: \", list1)\n","#problem with extend command is that it modified one of the lists, so how do we do it w out modifying?\n","list1 = [1,2,3]\n","list2 = [4,5,6]\n","#this is called concatenation\n","mrgedlist = list1 = list2\n","print(\"merged:\", mrgedlist)\n","\n","print(\"leng of sort list\", len(sortlist))\n","\n","# slicing a list\n","slicelist = [1,23,2,3,13,14,25,546,12,7]\n","\n","# i only want first 3 elements\n","# listname9start;end\n","print(\"first three elements:\", slicelist[:3])\n","#slicelist[3:]\n","#slicelist[-3:\n","\n","'''\n","sort a list in descending order\n","check if a list is a palindrom meaning that it can be read the same way forwards and backwards\n","removing duplicates from a list so all duped characters are removed-> create new list which contains all the unique characters and no repeats\n","find common numbers between two lists, store them in a new list and print out the list\n","\n","\n","'''"],"metadata":{"id":"yrNH_CgBrC2I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\n","\n","def add(num1, num2):\n","    #return num1+num2\n","    result = num1 + num2\n","    return result\n","\n","\n","x = int(input(\"Please enter the first number\"))\n","y = int(input(\"Please enter the second number\"))\n","\n","#the order of variables being passed through the function is important\n","print(\"Result of adding the two numbers is:\", add(x,y))\n","\n","#write a subtract function\n","#check which number is bigger\n","# the answer should always be positive\n","\n","def subtract(num1,num2):\n","   if num1>num2:\n","    result = num1-num2\n","   else:\n","    result = num2-num1\n","    return result\n","\n","n = int(input(\"Please enter the first number\"))\n","a = int(input(\"Please enter the second number\"))\n","\n","print(\"Result of subtracting the numbers is\", subtract(n,a))\n","\n","\n","def greet(name):\n","  print(f\"Hello {name}! Hope you are doing well\")\n","  print(\"before return\")\n","  return\n","  print(\"after return\")\n","\n","\n","greet(\"Kamran\")\n","def sumfor(n):\n","  result = 0\n","  for i in range(n):\n","    result = result + i + 1\n","    return result\n","\n","\n","def main():\n","  print(\"Main function running..\")\n","  sumfor(5)\n","  x = int(input(\"Please enter the first number\"))\n","y = int(input(\"Please enter the second number\"))\n","\n","# I want to calculatre the sum of the first n natural numbers\n","#n = 5\n","# 1+2+3+4+5\n","\n","if  __name__ ==  \"__main__\":\n","  main()\n","\n","def sum(n):\n","  if n == 1:\n","    return 1\n","  else:\n","    return n + sum(n-1)\n","\n","def factorial(n):\n","  if n == 1:\n","    return 1\n","  else:\n","    return n * factorial(n-1)\n","\n","def haha():\n","  print(\"Python is fun!\")\n","\n","'''\n","1.write a code that takes 2 numnbers as input first is base second is exponent 2 ^ 8\n","2.write custom functions for length max and min\n","length takes a string and returns its length\n","max - it takes a list of numbers and returns the max\n","min - it takes a list of numbers the m9inimum\n","3.\n","4.\n","\n","\n","'''\n","\n"],"metadata":{"id":"FODMZ8-HrFze"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''\n","nested loops -\n","\n","'''\n","\n","# I NEED TO MAKE A BUILDING USIND *S\n","# taking height and width from the user\n","\n","\n","\n","def build(h,w):\n","    for i in range(h):\n","        for i in range(w):\n","            print(\"*\", end = \"\")\n","    print()\n","\n","def pattern1(h):\n","    width=1\n","    for i in range(h):\n","        for i in range(w):\n","            print(\"*\", end = \"\")\n","        print()\n","        width+=1\n","\n","\n","def pyramid(h):\n","    for i in range(1,h+1):\n","      print(\" \" * (h - i) + \"*\" * (2*1-1))\n","\n","def p2d(list2d):\n","    for i in range(len(list2d)):\n","        innerlist = list2d[i]\n","        for element in innerlist:\n","            print(element, end = \" \")\n","        print()\n","\n","\n","\n","height = int(input(\"Provide the height\"))\n","width = int(input(\"PROVIDE THE WIDTH\"))\n","\n","build(height,width)\n","\n","pyramid(height)\n","\n","print(\"list\")\n","\n","\n","\n","\n","list2d = [[1,2,3], [4,5,6], [7,8,9]]\n","\n","p2d(list2d)\n","\n","'''\n","1. make an inverted pyramid\n","2. make a diamond pattern\n","populate a 2d list using nested for loops - take length as input from user\n","run an outer loop for these many number of times\n","\n","\n","\n","'''"],"metadata":{"id":"Ds5CgeVerOh9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''\n","Libraries\n","\n","'''\n","# libraries are pre written packages of code that allloow you to do complex stuff using a single line of code\n","# a particular library in python is like a book which has code written in it and you can access that code using book and chapter name\n","\n","\n","\n","#to get a library in your code library we si,ply write import and library name\n","import random\n","import time\n","#you nnbed to make sure your library is installed\n","#pip install libraryname in terminal\n","\n","username = input(\"please enter your name\")\n","password = \"\"\n","while (len(password) <8):\n","    password = input(\"please enter a password that is minimum 8 characters long\")\n","\n","otp = random.randint(10000000, 99999999)\n","\n","print(\"here are your login details\")\n","print(\"username:\", username)\n","print(\"OTP: \", otp)\n","\n","def countdown(start):\n","    for i in range(start,0, -1):\n","        print(i, \"...\")\n","        time.sleep(1)\n","    print(\"countdown finished\")\n","\n","\n","countdown(10)\n","\n","\n","\n","'''\n","1. make a guesssing game using a library. hae the user ehnter the difficulty. easy has numbers 0-9 medium 0-99 hard 100-999\n","record the number of tries it takes the usder to guess the answer. if the guess if the user is higher or lower than the number infrom them accordingly\n","\n","2. make timer using time library take number of minutes from user convert to seconds and then pass through functiuon\n","4:59\n","4:58\n","\n","\n","'''\n","\n","from datetime import datetime\n","\n","now = datetime.now()\n","print(now)\n","\n","def timer(minutes):\n","    while (minutes >= 0):\n",""],"metadata":{"id":"Xs4SyKv4rRPf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"o-iCy825rU50"},"execution_count":null,"outputs":[]}]}